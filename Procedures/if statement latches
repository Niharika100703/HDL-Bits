// Syntactically-correct code does not necessarily result in a reasonable circuit (combinational logic + flip-flops). 
// "What happens in the cases other than those we specified?". Verilog's answer is: Keep the outputs unchanged.
// This behaviour of "keep outputs unchanged" means the current state needs to be remembered.  
// Combinational logic (e.g., logic gates) cannot remember any state. 
// Thus produces a latch.
// Unless the latch was intentional, it almost always indicates a bug.
// Watch out for Warning (10240): ... inferring latch(es)" messages. 
// How to avoid making latches?
// Combinational circuits must have a value assigned to all outputs under all conditions. 
// This usually means you always need 'else clauses' or a 'default value' assigned to the outputs.


// synthesis verilog_input_version verilog_2001
module top_module (
    input      cpu_overheated,
    output reg shut_off_computer,
    input      arrived,
    input      gas_tank_empty,
    output reg keep_driving  ); //

    always @(*) begin
        if (cpu_overheated)
           shut_off_computer = 1;
        else
          shut_off_computer = 0;  
    end

    always @(*) begin
        if (~arrived)
           keep_driving = ~gas_tank_empty;
        else 
           keep_driving = 0;
    end

endmodule
